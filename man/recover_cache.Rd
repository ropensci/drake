% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api-cache.R
\name{recover_cache}
\alias{recover_cache}
\title{Load an existing drake files system cache if it exists
or create a new one otherwise.}
\usage{
recover_cache(path = NULL, hash_algorithm = NULL,
  short_hash_algo = NULL, long_hash_algo = NULL, force = FALSE,
  verbose = 1L, fetch_cache = NULL, console_log_file = NULL)
}
\arguments{
\item{path}{file path of the cache}

\item{hash_algorithm}{name of a hash algorithm to use.
See the \code{algo} argument of the \code{digest} package for your options.}

\item{short_hash_algo}{Deprecated on 2018-12-12. Use \code{hash_algorithm} instead}

\item{long_hash_algo}{Deprecated on 2018-12-12. Use \code{hash_algorithm} instead}

\item{force}{logical, whether to load the cache
despite any back compatibility issues with the
running version of drake.}

\item{verbose}{logical or numeric, control printing to the console.
\itemize{
\item \code{0} or \code{FALSE}: print nothing.
\item \code{1} or \code{TRUE}: print only targets to build.
\item \code{2}: plus checks and cache info.
\item \code{3}: plus missing imports.
\item \code{4}: plus all imports.
\item \code{5}: plus execution and total build times for targets.
\item \code{6}: plus notifications when targets are being stored.
}}

\item{fetch_cache}{deprecated}

\item{console_log_file}{character scalar,
connection object (such as \code{stdout()}) or \code{NULL}.
If \code{NULL}, console output will be printed
to the R console using \code{message()}.
If a character scalar, \code{console_log_file}
should be the name of a flat file, and
console output will be appended to that file.
If a connection object (e.g. \code{stdout()})
warnings and messages will be sent to the connection.
For example, if \code{console_log_file} is \code{stdout()},
warnings and messages are printed to the console in real time
(in addition to the usual in-bulk printing
after each target finishes).}
}
\value{
A drake/storr cache.
}
\description{
Does not work with
in-memory caches such as \code{\link[=storr_environment]{storr_environment()}}.
}
\examples{
\dontrun{
test_with_dir("Quarantine side effects.", {
clean(destroy = TRUE)
load_mtcars_example() # Get the code with drake_example("mtcars").
make(my_plan) # Run the project, build all the targets.
x <- recover_cache(".drake") # Recover the project's storr cache.
})
}
}
\seealso{
\code{\link[=new_cache]{new_cache()}}, \code{\link[=this_cache]{this_cache()}},
\code{\link[=get_cache]{get_cache()}}
}
