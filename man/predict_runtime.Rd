% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timing.R
\name{predict_runtime}
\alias{predict_runtime}
\title{Predict runtime}
\usage{
predict_runtime(plan, from_scratch = FALSE, untimed_method = mean,
  digits = 0, verbose = FALSE, config = NULL, ...)
}
\arguments{
\item{from_scratch}{Predict building only \code{\link{outdated}} targets, or the entire plan?}

\item{untimed_method}{What to do with targets that have never been built (and thus have no
timing data)? By default, the function uses the mean of other build_times in the same build
stage. This could be semi-accurate depending on your dependency graph. Override this by passing
in a function like \code{mean} that summarizes a vector. Or, just pass in a constant.}

\item{digits}{How many digits to round the times to.}

\item{verbose}{same as for \code{\link{make}}}

\item{config}{Optional internal runtime parameter list of
\code{\link{make}(...)},
produced with \code{\link{config}()}.
Computing this
in advance could save time if you plan multiple calls to
\code{predict_runtime()}.}

\item{...}{Other arguments to pass to \code{\link{config}}}
}
\description{
This function uses \code{\link{build_times}} and your plan to predict the amount of time it will
take to \code{\link{make}}.
}
